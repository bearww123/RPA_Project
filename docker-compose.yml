# DOCKER 네트워크 연결
networks:
  databases:
    driver: bridge

# DOCKER 컨테이너 연결
services:
  # Main_Database - [ MySQL ]
  Main:
    image: mysql:latest
    restart: always
    container_name: Main_DB
    environment:
      MYSQL_ROOT_PASSWORD: globalm
      MYSQL_DATABASE: rpa_databases
    volumes:
      - ./MainDB_data:/var/lib/mysql # MySQL_Main 데이터 저장
    ports:
      - "4407:3307"
    networks:
      - databases
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
  # BackUp_Database - [ MySQL ]
  BackUp:
    image: mysql:latest
    restart: always
    container_name: BackUp_DB
    environment:
      MYSQL_ROOT_PASSWORD: globalb
      MYSQL_DATABASE: Back_rpa_databases
    volumes:
      - ./BackDB_data:/var/lib/mysql #MySQL_Back 데이터 저장
    ports:
      - "4408:3308"
    networks:
      - databases
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
  # Main_Web - [ Django ]
  web:
    networks:
      - databases
    container_name: RPA_Web
    build:
      context: .
      dockerfile: Dockerfile  
    command: python manage.py runserver 0.0.0.0:8000 --settings=RPA_config.settings
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
     Main:
        condition: service_healthy